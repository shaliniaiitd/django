AJS.test.require(["jira.webresources:urlParamFlag"],function(){"use strict";var e=function(e){return"flagContent for: "+e};module("UrlParamFlag",{setup:function(){this.flagsData=[],this.sandbox=sinon.sandbox.create(),this.sandbox.stub(window.history,"replaceState"),this.context=AJS.test.mockableModuleContext(),this.showMsg=sinon.stub(),this.context.mock("jira/flag",{showMsg:this.showMsg}),this.UrlParamFlag=this.context.require("jira/urlParamFlag")},teardown:function(){this.sandbox.restore()}}),[{parameterName:"deletedContext",getMessage:e,url:"http://www.test.invalid"},{parameterName:"deletedContext",getMessage:e,url:"http://www.test.invalid?"},{parameterName:"deletedContext",getMessage:e,url:"http://www.test.invalid/someContext/test?deletedContext=contextName",urlAfter:"/someContext/test?",expectedParameterValue:"contextName"},{parameterName:"deletedContext",getMessage:e,url:"http://www.test.invalid?some=param&deletedContext=contextName&other=param2",urlAfter:"/?some=param&other=param2",expectedParameterValue:"contextName"},{parameterName:"deletedContext",getMessage:e,url:"http://www.test.invalid?deletedContext=<script>alert(1)<\/script>",urlAfter:"/?",expectedParameterValue:"&lt;script&gt;alert(1)&lt;/script&gt;"},{parameterName:"otherParam",getMessage:e,url:"http://www.test.invalid?deletedContext=<script>alert(1)<\/script>&otherParam=<script>alert(2)<\/script>",urlAfter:"/?deletedContext=%3Cscript%3Ealert%281%29%3C%2Fscript%3E",expectedParameterValue:"&lt;script&gt;alert(2)&lt;/script&gt;"}].forEach(function(e){test("should handle url "+e.url+" with parameter name "+e.parameterName+" so that expected parameter value/flag is: "+(e.expectedParameterValue?e.expectedParameterValue:"not handled"),function(){sinon.assert.notCalled(this.showMsg),sinon.assert.notCalled(window.history.replaceState),new this.UrlParamFlag(e.url,[e]).show(),e.expectedParameterValue?(sinon.assert.calledWith(this.showMsg,null,"flagContent for: "+e.expectedParameterValue,{closeable:!0,close:"auto",type:"info"}),sinon.assert.calledWith(window.history.replaceState,null,null,e.urlAfter)):(sinon.assert.notCalled(this.showMsg),sinon.assert.notCalled(window.history.replaceState))})}),test("Should handle multiple flags",function(){var t={url:"http://test/someContext/test?param1=value1&param2=value2&param3=value3&param4=value4&param5=value5",urlAfter:"/someContext/test?param2=value2&param4=value4",flagsData:[{parameterName:"param1",getMessage:e,type:"success"},{parameterName:"param222",getMessage:e},{parameterName:"param3",getMessage:e,type:"warning"},{parameterName:"param444",getMessage:e,type:"info"},{parameterName:"param5",getMessage:e}]};sinon.assert.notCalled(this.showMsg),sinon.assert.notCalled(window.history.replaceState),new this.UrlParamFlag(t.url,t.flagsData).show(),equal(3,this.showMsg.callCount),equal(3,window.history.replaceState.callCount),sinon.assert.calledWith(this.showMsg,null,"flagContent for: value1",{closeable:!0,close:"auto",type:"success"}),sinon.assert.calledWith(window.history.replaceState,null,null,"/someContext/test?param2=value2&param3=value3&param4=value4&param5=value5"),sinon.assert.calledWith(this.showMsg,null,"flagContent for: value3",{closeable:!0,close:"auto",type:"warning"}),sinon.assert.calledWith(window.history.replaceState,null,null,"/someContext/test?param2=value2&param4=value4&param5=value5"),sinon.assert.calledWith(this.showMsg,null,"flagContent for: value5",{closeable:!0,close:"auto",type:"info"}),sinon.assert.calledWith(window.history.replaceState,null,null,"/someContext/test?param2=value2&param4=value4")})});