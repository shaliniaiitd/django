AJS.test.require(["jira.webresources:mentions-feature"],function(){"use strict";function e(e,a){return a||(a=e.length),r.getUserNameFromCurrentWord(e,a)}function a(e){return!!s(JIRA.Templates.mentionsSuggestions({suggestions:[],activity:!1,query:null,isRolesEnabled:e})).find(".aui-list-section-footer").length}function t(e){return Array.from(e.find(".aui-list-item-link").map(function(e,a){return s(a).attr("rel")}))}var r=require("jira/mention/mention-matcher"),n=require("jira/mention/mention"),s=require("jquery"),o=[{self:"http://localhost:8090/jira/rest/api/2/user?username=admin",key:"admin",name:"admin",emailAddress:"admin@admin.com",avatarUrls:{"48x48":"https://www.gravatar.com/avatar/64e1b8d34f425d19e1ee2ea7236d3028?d=mm&s=48","24x24":"https://www.gravatar.com/avatar/64e1b8d34f425d19e1ee2ea7236d3028?d=mm&s=24","16x16":"https://www.gravatar.com/avatar/64e1b8d34f425d19e1ee2ea7236d3028?d=mm&s=16","32x32":"https://www.gravatar.com/avatar/64e1b8d34f425d19e1ee2ea7236d3028?d=mm&s=32"},displayName:"admin",active:!0,timeZone:"Australia/Sydney",locale:"en_AU",issueInvolvements:[{id:"assignee",label:"assignee"},{id:"reporter",label:"reporter"}],highestIssueInvolvementRank:0},{self:"http://localhost:8090/jira/rest/api/2/user?username=axafirfjr",key:"JIRAUSER10640",name:"axafirfjr",emailAddress:"axafirfjr@localdomain.com",avatarUrls:{"48x48":"https://www.gravatar.com/avatar/82311ba8f074bae9ef3715290ee2136a?d=mm&s=48","24x24":"https://www.gravatar.com/avatar/82311ba8f074bae9ef3715290ee2136a?d=mm&s=24","16x16":"https://www.gravatar.com/avatar/82311ba8f074bae9ef3715290ee2136a?d=mm&s=16","32x32":"https://www.gravatar.com/avatar/82311ba8f074bae9ef3715290ee2136a?d=mm&s=32"},displayName:"Aaflwdgu Xafirfjr",active:!0,timeZone:"Australia/Sydney",locale:"en_AU",issueInvolvements:[]},{self:"http://localhost:8090/jira/rest/api/2/user?username=asumlnczj",key:"JIRAUSER10624",name:"asumlnczj",emailAddress:"asumlnczj@localdomain.com",avatarUrls:{"48x48":"https://www.gravatar.com/avatar/f549dbd3da17ee50c851f568ca74d05e?d=mm&s=48","24x24":"https://www.gravatar.com/avatar/f549dbd3da17ee50c851f568ca74d05e?d=mm&s=24","16x16":"https://www.gravatar.com/avatar/f549dbd3da17ee50c851f568ca74d05e?d=mm&s=16","32x32":"https://www.gravatar.com/avatar/f549dbd3da17ee50c851f568ca74d05e?d=mm&s=32"},displayName:"Aajegmhy Sumlnczj",active:!0,timeZone:"Australia/Sydney",locale:"en_AU",issueInvolvements:[]},{self:"http://localhost:8090/jira/rest/api/2/user?username=axmyummap",key:"JIRAUSER11091",name:"axmyummap",emailAddress:"axmyummap@localdomain.com",avatarUrls:{"48x48":"https://www.gravatar.com/avatar/0bf6ef284e3a9328e6078e9a4282e804?d=mm&s=48","24x24":"https://www.gravatar.com/avatar/0bf6ef284e3a9328e6078e9a4282e804?d=mm&s=24","16x16":"https://www.gravatar.com/avatar/0bf6ef284e3a9328e6078e9a4282e804?d=mm&s=16","32x32":"https://www.gravatar.com/avatar/0bf6ef284e3a9328e6078e9a4282e804?d=mm&s=32"},displayName:"Aaomclxu Xmyummap",active:!0,timeZone:"Australia/Sydney",locale:"en_AU",issueInvolvements:[]},{self:"http://localhost:8090/jira/rest/api/2/user?username=ajsvnucxf",key:"JIRAUSER11535",name:"ajsvnucxf",emailAddress:"ajsvnucxf@localdomain.com",avatarUrls:{"48x48":"https://www.gravatar.com/avatar/f491c6f658614f6609a61a36d2528b39?d=mm&s=48","24x24":"https://www.gravatar.com/avatar/f491c6f658614f6609a61a36d2528b39?d=mm&s=24","16x16":"https://www.gravatar.com/avatar/f491c6f658614f6609a61a36d2528b39?d=mm&s=16","32x32":"https://www.gravatar.com/avatar/f491c6f658614f6609a61a36d2528b39?d=mm&s=32"},displayName:"Aarmwrzx Jsvnucxf",active:!0,timeZone:"Australia/Sydney",locale:"en_AU",issueInvolvements:[]}];module("getUserNameFromCurrentWord - triggers"),test("empty searches",function(){equal(e("@"),"","matching @"),equal(e("[@"),"","matching [@"),equal(e("[~"),"","matching [~"),equal(e("[~@"),"","matching [~@"),equal(e("~@"),"","matching ~@")}),test("non-valid syntaxes do not trigger autocomplete",function(){equal(e("["),null,"matching ["),equal(e("[a"),null,"matching [a")}),test("simple search for 'a'",function(){equal(e("@a"),"a","matching @a"),equal(e("[@a"),"a","matching [@a"),equal(e("[~a"),"a","matching [~a"),equal(e("[~@a"),"a","matching [~@a")}),test("takes the last occurrence of [~ to start the search",function(){equal(e("[~[~["),"[","should only return data after the last [~")}),test("the @ syntax takes precedence over [~ syntax",function(){equal(e("[@~"),"~","matching [@~"),equal(e("[@~a"),"~a","matching [@~a")}),test("the @ syntax does not match if preceded by alpha-numeric characters",function(){equal(e("test@a"),null,"matching test@a"),equal(e("the quick brown fox jumped over the lazy@dog"),null,"there's an alphanumeric character before the @, so shouldn't match"),equal(e("the quick brown fox jumped over the lazy @dog"),"dog","no alphanumeric character before the @, so should search for 'dog'")}),test("the [~ syntax does not match if preceded by alpha-numeric characters",function(){equal(e("test[~a"),null,"matching test[~a"),equal(e("the quick brown fox jumped over the lazy[~dog"),null,"there's an alphanumeric character before the [~, so shouldn't match"),equal(e("the quick brown fox jumped over the lazy [~dog"),"dog","no alphanumeric character before the [~, so should search for 'dog'")}),test("the rest",function(){equal(e("test[@a"),"a","matching test[@a"),equal(e("test[@~a"),"~a","matching test[@~a"),equal(e("test[~@a"),"a","matching test[~@a"),equal(e("a test[@a"),"a","matching a test[@a"),equal(e("a test[@~a"),"~a","matching a test[@~a"),equal(e("a test[~@a"),"a","matching a test[~@a")}),module("getUserNameFromCurrentWord - query"),test("can have multiple words in the query",function(){equal(e("the quick brown fox jumped over the @lazy dog"),"lazy dog","should return 'lazy dog'"),equal(e("the quick brown fox jumped over @the lazy dog"),"the lazy dog","should return 'the lazy dog'")}),test("the query is limited to three words maximum",function(){var a="the quick brown fox @jumped over the lazy dog";equal(e(a,a.length),null,"caret is at end of 5th word after the @, so should return null"),equal(e(a,a.length-4),null,"caret is at end of 4th word after the @, so should return null"),equal(e(a,a.length-7),null,"caret is inside 4th word after the @, so should return null"),equal(e(a,a.length-9),"jumped over the","caret is at end of 3rd word after the @, so should return 'jumped over the'")}),test("the query will return multiple words up to and including any whitespace before the 4th word",function(){var a="the quick brown fox @jumped over the lazy dog";equal(e(a,a.length-8),"jumped over the ","caret is just before the 4th word after the @, so should return everything before it (including the whitespace)"),equal(e(a,a.length-7),null,"caret is just after the 'l' in lazy, which is in the 4th word, so should return null")}),test("trailing whitespace is 'preserved' in the query",function(){equal(e("the quick brown fox jumped over the @lazy dog  "),"lazy dog  ","should keep the space after 'dog'")}),test("infix whitespace is preserved in the query",function(){equal(e("jumped over the @lazy   dog"),"lazy   dog","should keep the three spaces between 'lazy' and 'dog'"),equal(e("jumped over the @lazy \t\t  dog"),"lazy \t\t  dog","keeps everything between 'lazy' and 'dog'")}),test("carriage return and newline break the query",function(){var a="jumped over the @lazy\ndog";equal(e(a,a.length),null,"when the user's caret is on the next line, it returns false"),equal(e(a,a.length-3),null,"when the user's caret is just after the new line, it returns false"),equal(e(a,a.length-4),"lazy","when the user's caret is just before the new line (i.e, just after 'lazy'), it will return 'lazy'")}),module("Mention - role help text"),test("help text should be available when roles is enabled",function(){ok(a(!0))}),test("help text should not be available when roles is not enabled",function(){ok(!a(!1))}),module("Mention#_indexOfFirstMatch"),test("_indexOfFirstMatch",function(){var e=JIRA.Mention.prototype._indexOfFirstMatch;equal(e("Mike Cannon-Brooks","Br"),12),equal(e("Mike Cannon-Brooks","Bre"),-1),equal(e("Mike Cannon-Brooks","Mi"),0),equal(e("Mike Cannon-Brooks","Cann"),5),equal(e("Mike Cannon-Brooks","Cannon-Brooks"),5),equal(e("James O'Brian","Br"),8),equal(e("James O'Brian","O'Br"),6),equal(e("cat@hat.com","ca"),0),equal(e("cat@hat.com","ha"),4),equal(e("cat@hat.com","at"),-1),equal(e("cat@hat.com","co"),8)}),module("Mentions component",{setup:function(){this.sandbox=sinon.sandbox.create(),this.server=this.sandbox.useFakeServer(),this.clock=this.sandbox.useFakeTimers()},teardown:function(){this.clock.restore(),this.server.restore()}}),test("Debounces calls to server",function(){var e=new n("HEK-1");e.textarea("<textarea></textarea>"),sinon.stub(e,"_getUserNameFromInput",function(){return"fred"}),sinon.stub(e,"_getCaretPosition",function(){return 0}),sinon.stub(e,"_isNewRequestRequired",function(){return!0}),e._keyUp(),e._keyUp(),e._keyUp(),equal(this.server.requests.length,0,"API was not called instantly"),this.clock.tick(175),equal(this.server.requests.length,1,"API was called once")}),test("Uses queryCache to display results",function(){var e=new n("HEK-1"),a="admin";sinon.stub(e,"_getUserNameFromInput",function(){return a}),sinon.stub(e,"_getCaretPosition",function(){return 1}),sinon.stub(e,"_isNewRequestRequired",function(){return!0});var r=sinon.spy(e,"updateSuggestions");e.textarea("<textarea></textarea>"),equal(e.dataSource.matcher(),!1,"matcher is not returning results"),e._keyUp(),this.clock.tick(175),this.sandbox.server.respondWith([200,{"Content-Type":"application/json"},JSON.stringify(o)]),this.sandbox.server.respond();var s=t(r.secondCall.args[0]);deepEqual(s,o.map(function(e){return e.name}),"shows results in backend order"),e._keyUp(),this.clock.tick(175),equal(this.server.requests.length,1,"server is not polled again for the same query"),a="a",e._keyUp(),this.clock.tick(175),equal(this.server.requests.length,2,"server is polled even if it could populate dropdown from cache")})});