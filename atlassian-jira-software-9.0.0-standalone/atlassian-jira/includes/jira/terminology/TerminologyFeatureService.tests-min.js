AJS.test.require(["jira.webresources:terminology-feature-service"],function(){"use strict";module("TerminologyFeatureService",{setup:function(){var e=this;this.terminologyData={terminologyEntries:[{originalName:"sprint",newName:"Potato",newNamePlural:"Potatoes",isDefault:!1},{originalName:"epic",newName:"Orange",newNamePlural:"Oranges",isDefault:!1},{originalName:"sprint",newName:"sprint",newNamePlural:"sprints",isDefault:!0},{originalName:"epic",newName:"epic",newNamePlural:"epics",isDefault:!0}],isTerminologyActive:!0},this.isFeatureEnabled=!0,this.languageLocale="en-AU",this.wrmData={claim:function(){return e.terminologyData}},this.meta={get:function(){return e.languageLocale}},this.mockedContext=AJS.test.mockableModuleContext(),this.mockedContext.mock("wrm/data",this.wrmData),this.mockedContext.mock("jira/util/data/meta",this.meta),this.terminologyFeatureService=this.mockedContext.require("jira/terminology-feature-service"),this.sandbox=sinon.sandbox.create(),this.sandbox.stub(this.terminologyFeatureService,"isTerminologyEnabled",function(){return e.isFeatureEnabled})},teardown:function(){this.sandbox.restore()}}),test("Returns correct terminology entries ",function(){equal(this.terminologyFeatureService.getTerminologyEntries().length,2);var e=this.terminologyFeatureService.getTerminologyEntryForTerm("sprint"),t=this.terminologyFeatureService.getTerminologyEntryForTerm("epic");notOk(e.isDefault),equal(e.originalName,"sprint"),notOk(t.isDefault),equal(t.originalName,"epic")}),test("Should return true when terminology is active for user",function(){ok(this.terminologyFeatureService.isTerminologyActiveForUser())}),test("Terminology is not active for user with non english locale",function(){this.languageLocale="nl-NL",notOk(this.terminologyFeatureService.isTerminologyActiveForUser())}),test("Terminology is not active for user when feature is disabled",function(){this.isFeatureEnabled=!1,notOk(this.terminologyFeatureService.isTerminologyActiveForUser())}),test("Terminology is not active for user when terminology is not changed in the instance",function(){this.terminologyData.isTerminologyActive=!1,notOk(this.terminologyFeatureService.isTerminologyActiveForUser())})});