AJS.test.require(["jira.webresources:jira-global","jira.webresources:dialogs"],function(){"use strict";var e=require("jquery"),t=require("underscore"),i=require("jira/dialog/dialog"),o=require("jira/dialog/dialog-stack"),r=function(t,o){var r,s=e("<div>").css({height:"200px"}).append(e("<h2>").text(t)),n={content:function(e){return r.contentCall++,e(s)},height:"200px",windowTitle:t};return r=new i(e.extend(n,o)),r.isVisible=function(){return s.is(":visible")},r.contentCall=0,r.title=t,r},s=function(){ok(0===e(".jira-page-loading-indicator").length,"Throbber is removed when dialog is displayed")},n=function(e,t){return function(i){if(i){var o=i.title;ok(i.isVisible(),o+" visible?"),strictEqual(document.title,o,"Title correctly set to '"+o+"'."),s()}else strictEqual(document.title,t,"Title correctly reset.");for(var r=0;r<e.length;r++)e[r]!==i&&ok(!e[r].isVisible(),e[r].title+" not visible?")}},l=function(e){return function(){for(var t=0;t<arguments.length;t++){var i=e[t];strictEqual(i.contentCall,arguments[t],"Content refreshed on '"+i.title+"' "+arguments[t]+" times?")}}};module("Dialog Tests",{teardown:function(){e("."+i.ClassNames.DIALOG).remove()}}),test("Stacked Dialogs Only",function(){var e=r("Dialog3",{stacked:!0}),t=r("Dialog2",{stacked:!0}),i=r("Dialog1",{stacked:!0}),o=[i,t,e],s=document.title,a=document.title="Stacked Dialogs Test",d=n(o,a),c=l(o);i.show(),d(i),c(1,0,0),t.show(),d(t),c(1,1,0),e.show(),d(e),c(1,1,1),e.hide(),d(t),c(1,1,1),e.show(),d(e),c(1,1,2),e.hide(),d(t),c(1,1,2),t.hide(),d(i),c(1,1,2),i.hide(),d(null),c(1,1,2),t.show(),d(t),c(1,2,2),t.hide(),d(null),c(1,2,2),e.show(),d(e),c(1,2,3),i.show(),d(i),c(2,2,3),t.show(),d(t),c(2,3,3),t.hide(),d(i),c(2,3,3),i.hide(),d(e),c(2,3,3),t.show(),d(t),c(2,4,3),t.hide(),d(e),c(2,4,3),e.hide(),d(null),c(2,4,3),document.title=s}),test("Stacked Dialogs Normal With Normal Dialogs",function(){var e=r("Dialog3",{stacked:!0}),t=r("Dialog2",{stacked:!0}),i=r("DialogNotStacked1"),o=r("DialogNotStacked4"),s=[i,t,e,o],a=document.title,d=document.title="Stacked Dialogs with Normal Dialog Test",c=n(s,d),u=l(s);e.show(),c(e),u(0,0,1,0),i.show(),c(i),u(1,0,1,0),o.show(),c(o),u(1,0,1,1),o.hide(),c(null),i.show(),c(i),u(2,0,1,1),i.hide(),t.show(),c(t),u(2,1,1,1),e.show(),c(e),u(2,1,2,1),o.show(),c(o),u(2,1,2,2),o.hide(),c(e),u(2,1,2,2),i.show(),c(i),u(3,1,2,2),o.show(),c(o),u(3,1,2,3),i.show(),c(i),u(4,1,2,3),i.hide(),c(null),document.title=a}),test("Test Simple Dialog Title Change",function(){var e=r("Dialog1"),t=r("Dialog2"),i=document.title,o=document.title="Test Dialog Title",s=function(e){e?strictEqual(document.title,e.title,e.title+" title correct?"):strictEqual(document.title,o,"Original Title Restored?")};e.show(),s(e),t.show(),s(t),t.hide(),s(null),e.show(),s(e),t.show(),s(t),e.show(),s(e),e.hide(),s(null),document.title=i}),test("Test redirect instructions",function(){var e=r("Dialog1"),t={},i={getResponseHeader:function(e){return t[e]}},o=e._detectRedirectInstructions(i);deepEqual(o,{serverIsDone:!1,redirectUrl:""},"No header"),t["X-Atlassian-Dialog-Control"]="DONE",o=e._detectRedirectInstructions(i),deepEqual(o,{serverIsDone:!0,redirectUrl:""},"DONE header"),t["X-Atlassian-Dialog-Control"]="redirect:http://localhost.com",o=e._detectRedirectInstructions(i),deepEqual(o,{serverIsDone:!0,redirectUrl:"http://localhost.com"},"Redirect Header"),t["X-Atlassian-Dialog-Control"]="permissionviolation",o=e._detectRedirectInstructions(i),deepEqual(o,{serverIsDone:!0,redirectUrl:window.location.href},"Permision Voilation")}),module("Dialog headers -- likely to change in JIRA 6.1",{setup:function(){this.$content=e("<p>Practically empty</p>"),this.dialog=new i({content:this.$content})},teardown:function(){this.dialog.hide(),this.$content.remove()}}),test("Can provide plain-text for the heading",function(){var e="This is my dialog heading. It is made from win and awesome.";this.dialog.addHeading(e),notEqual(this.dialog.$popup.text().indexOf(e),-1,"The title text should be present in the dialog")}),test("heading contents are placed inside known container",function(){this.dialog.addHeading("Quite full");var e=this.dialog.$popup.find("."+i.ClassNames.HEADING_AREA);equal(e.text(),"Quite full","The dialog's heading is inside an element with the HTML class from JIRA.Dialog.ClassNames.HEADING_AREA"),equal(e.find("h2").size(),1,"The dialog's heading is contained within an h2 element.")}),test("Can provide HTML for the heading",function(){var e="One flew <i>over</i> the <strong>cuckoo's</strong> nest";this.dialog.addHeading(e);var t=this.dialog.$popup.find("."+i.ClassNames.HEADING_AREA);equal(t.find("h2").html(),e,"HTML is preserved when added to the dialog heading")}),test("H2 is placed first inside the heading",function(){this.dialog.addHeading("<h2>Dialog title</h2><div>Some additional stuff</div>");var e=this.dialog.$popup.find("."+i.ClassNames.HEADING_AREA);equal(e.find(":first-child").prop("tagName"),"H2","H2 is the first element in the heading")}),test("H2 is placed first inside the heading regardless the order of elements provided",function(){this.dialog.addHeading("<div>Some additional stuff</div><h2>Dialog title</h2>");var e=this.dialog.$popup.find("."+i.ClassNames.HEADING_AREA);equal(e.find(":first-child").prop("tagName"),"H2","H2 is the first element in the heading")}),module("Dialog resources",{setup:function(){this.sandbox=sinon.sandbox.create();var t=e("<div>");this.dialogOptions={resources:["resource1","resource2"],contexts:["context1","context2"],content:function(e){return e(t)}},this.context=AJS.test.mockableModuleContext(),this.requireDeferred=new e.Deferred,this.wrmRequire=this.sandbox.stub(),this.context.mock("wrm/require",this.wrmRequire),this.Dialog=this.context.require("jira/dialog/dialog"),this.WRMDialog=this.Dialog.extend({defineResources:function(){this._super.apply(this,arguments),(this.options.resources||[]).forEach(function(e){this.requireResource(e)},this),(this.options.contexts||[]).forEach(function(e){this.requireContext(e)},this)}})},teardown:function(){this.sandbox.restore()}}),test("New dialog instance will not prefetch resources in constructor when prefetchResources field is not true",function(){new this.WRMDialog(this.dialogOptions),ok(this.wrmRequire.notCalled,"require not called")}),test("New dialog instance will prefetch resources in constructor when prefetchResources field is true",function(){new this.WRMDialog(t.extend(this.dialogOptions,{prefetchResources:!0})),ok(this.wrmRequire.calledOnce,"require called once"),deepEqual(this.wrmRequire.getCall(0).args[0],["wr!resource1","wr!resource2","wrc!context1","wrc!context2"],"WRM.require called with proper args")}),test("Show will not download resources if none specified",function(){var e=new this.WRMDialog;ok(this.wrmRequire.notCalled,"require not called after constructor"),e.show(),ok(this.wrmRequire.notCalled,"require not called after show"),e.hide()}),test("Show will download resources once if specified",function(){this.wrmRequire.returns(this.requireDeferred);var e=new this.WRMDialog(this.dialogOptions);ok(this.wrmRequire.notCalled,"require not called after constructor"),e.show(),ok(this.wrmRequire.calledOnce,"require called once"),deepEqual(this.wrmRequire.getCall(0).args[0],["wr!resource1","wr!resource2","wrc!context1","wrc!context2"],"WRM.require called with proper args"),e.hide(),e.show(),ok(this.wrmRequire.calledOnce,"require called once"),e.hide()}),test("Does not show dialog until resources resolved",function(){this.wrmRequire.returns(this.requireDeferred);var e=new this.WRMDialog(this.dialogOptions),t=this.sandbox.spy(e,"_onShowContent");ok(this.wrmRequire.notCalled,"require not called after constructor"),e.show(),ok(this.wrmRequire.calledOnce,"require called once"),ok(t.notCalled),this.requireDeferred.resolve(),ok(t.calledOnce,"showContent called after resources resolve"),e.hide()}),test("Dialog constructor should call options defineResources with itself in scope",function(){var e=this.sandbox.stub(),t=new this.Dialog({defineResources:e});ok(e.calledOnce,"defineResources was called once"),deepEqual(e.getCall(0).thisValue,t,"defineResources called with dialog as this.")}),module("DialogStack",{setup:function(){this.context=AJS.test.mockableModuleContext(),this.DialogStack=this.context.require("jira/dialog/dialog-stack")}}),test("[BC] Should support reading directly from `current` prop",function(){o.current=null,strictEqual(i.current,null)}),test("[BC] Should support writing directly to `current` prop",function(){var e={};o.current=null,i.current=e,strictEqual(i.current,e),strictEqual(o.current,e)})});