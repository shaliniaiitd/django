AJS.test.require(["jira.webresources:jqlautocomplete"],function(){"use strict";function e(e,o){test("test query: "+e,function(){var i=r(l),t=i.parse(e);o===a?ok(t.parseError,"Expected parsing to fail"):ok(!t.parseError,"Expected parsing to be successful")})}var r=require("jira/jql/jql-parser"),o=require("jira/autocomplete/jql-autocomplete"),i=require("jira/terminology-feature-service"),t=require("jquery"),a="PARSE_FAIL",n="SUCCESS",s="{}*/%+$#@?;",p=["abort","access","add","after","alias","all","alter","and","any","as","asc"],l=["greater","for","privileges","float","validate","distinct","of","break","defaults","byte","initial","file","noaudit","empty","on","false","boolean","right","option","decrement","limit","else","increment","fetch","equals","or","number","table","like","create","row","declare","not","trans","asc","start","session","then","view","strict","explain","go","unique","desc","raise","exclusive","before","next","inout","goto","date","nowait","escape","mode","character","rownum","union","encoding","delete","current","whenever","left","do","null","end","min","trigger","intersection","define","max","previous","integer","sqrt","return","true","checkpoint","divide","join","access","alter","field","delimiter","string","exists","modulo","having","public","insert","abort","uid","to","last","grant","count","transaction","synonym","inner","char","drop","rename","collate","by","where","long","identified","prior","function","revoke","after","remainder","values","more","commit","when","any","power","notin","returns","avg","index","execute","minus","select","int","double","size","rows","and","difference","input","default","isempty","intersect","column","exec","output","cf","update","raw","connect","set","catch","sum","object","from","add","collation","while","share","order","isnull","if","less","between","all","with","is","check","alias","resource","lock","into","modify","audit","as","multiply","in","decimal","begin","subtract","immediate","outer","continue","group","user","rowid","first"],u=void 0,c=void 0,f=void 0;for(module("Test parser"),e('priority = "qwerty"',n),e('priority = "qwerty"',n),e('priority="qwerty"',n),e("priority=qwerty",n),e("  priority=qwerty  ",n),e("priority=     qwerty order      by priority, other",n),e("coolness >= awesome",n),e("coolness > awesome",n),e("coolness < awesome",n),e("coolness <= awesome",n),e("coolness        !=       awesome order     by     coolness desc",n),e('language in (java, c, "python2")',n),e('languagein   IN    (   java, c     , "python2")',n),e('inlanguage in (java, c, "python2")',n),e('pri in (java,c,"python2")',n),e("pri in(java)",n),e("pri In(java)",n),e("pri iN(java)",n),e('language not in (java, c, "python2")',n),e('languagein  NOT   IN    (   java, c     , "python2")',n),e('inlanguage not in (java, c, "python2")',n),e('pri NOT in (java,c,"python2")',n),e("pri not in(java)",n),e("pri NoT In(java)",n),e("pri nOT iN(java)",n),e("pri ~ stuff",n),e("pri~stuff",n),e("pri ~ 12",n),e("pri~12",n),e('pri ~ ("stuff", 12)',n),e("pri !~ stuff",n),e("pri!~stuff",n),e("pri !~ 12",n),e("pri!~12",n),e('pri !~ ("stuff", 12)',n),e("pri IS stuff",n),e("pri is stuff",n),e("pri IS EMPTY",n),e("pri IS NOT stuff",n),e("pri IS not stuff",n),e("pri is Not stuff",n),e("pri is not stuff",n),e("pri iN((java), duke)",n),e("priority = 12345",n),e("priority = -12345",n),e('priority = "12a345"',n),e("priority = 12345a",n),e("cf[12345] = 12345a",n),e("Cf  [ 0005 ] = x",n),e('priority = "12345"',n),e('priority="12a345"',n),e("testfield = EMPTY",n),e("testfield = empty",n),e("testfield = NULL",n),e("testfield = null",n),e('testfield = "null"',n),e('testfield = "NULL"',n),e('testfield = "EMPTY"',n),e('testfield = "empty"',n),e('priority = "a big string ~ != foo and priority = haha "',n),e('priority = ""',n),e("prior\\'ty = testvalue",n),e("priority\\ ty=testvalue",n),e("priority⻥ > 6",n),e("priori\\nty\\u2ee5 > 6",n),e("\\     < 38",n),e('"this is a strange field " = google',n),e("\"don't\" = 'true'",n),e('"don\\"t" = \'false\'',n),e("'don\"t' = 'false'",n),e("'cf[1220]' = abc",n),e("'cf' = abc",n),e("10245948 = abc      order          by 10245948",n),e("-10245948 = abc",n),e("new\\nline = abc",n),e("some\\u0082control = abc  order by some\\u0082control",n),e("b = ''",n),e("b = \\ ",n),e("b = don\\'t\\ stop\\ me\\ now",n),e("b = ⻥",n),e("b = \\u2EE5jkdfskjfd",n),e("b not in 'jack says, \"Hello World!\"'",n),e("b not in 'jack says, \\'Hello World!\\''",n),e("b not in \"jack says, 'Hello World!'\"",n),e('b not in "jack says, \\"Hello World!\'\\""',n),e('b not in "jack says, \\tnothing"',n),e("bad ~ wt\\u007f",n),e('priority = "a \\n new \\r line"',n),e('priority = "Tab:\\t NewLine:\\n Carrage Return:\\r"',n),e('priority = "Quote:\\" Single:\\\' Back Slash:\\\\ Space:\\ "',n),e('priority = "Unicode: \\ufeeF1 Unicode2: \\u6EEF"',n),e("priority = 'Escape\" don\\'t'",n),e('priority = "Escape\' don\\"t"',n),e("priority = higherThan(Major)",n),e('priority In     randomName(Major, Minor,      "cool", -65784)',n),e("priority    >=    randomName()",n),e("pri not in fun(name\\u0082e)",n),e("a = func\\'  ()",n),e("a = fu\\\"nc\\'()",n),e("a=function\\ name(  )",n),e("a = ⻥()",n),e("a = somereallystrangestring\\u2ee5()",n),e('version <= "affected\\ versions"(   )',n),e('version <= "affected\\ versio\'ns"(   )',n),e('version <= "affected versio\\"ns"(   )',n),e("version <= 'my messed up versio\\'ns'     (   )",n),e("version <= 'my m\\nessed up\\ versio\"ns'     (   )",n),e("version <= 4759879855`(   )",n),e("version <= 4759879(   )",n),e("version = badname\\u0091",n),e("a=b&c=d",n),e("a=b&&c=d",n),e("a=b|c=d",n),e("a=b||c=d",n),e("a<b",n),e("a>b",n),e("a~b",n),e("priority = major and foo > bar()",n),e("priority = majorand and foo>bar()",n),e("priority = major and foo > bar()",n),e("priority != major    and      foo >      bar()",n),e("priority != major    &&      foo >      bar()",n),e("priority != andmajor    &      foo >      bar()",n),e("priority != andmajor    and      foo >      bar() order by priority     DESC,      foo",n),e("a =b",n),e("a !=b",n),e("a >=b",n),e("a <=b",n),e("a !~b",n),e("a ~b",n),e("priority = major or foo > bar()",n),e("priority = major or foo > bar()",n),e("priority = major or foo > bar() or priority = minor",n),e("priority = major || foo > bar() | priority = minor",n),e("priority = major or foo > bar() || priority = minor",n),e("priority = major and foo > bar(1,2,3) or priority = minor and baz != 1234",n),e("priority =     major AND foo > bar(1,2,3) oR priority = minor and baz != 1234",n),e("priority=major and foo>bar(1,2,3)|| priority=minor  and  baz!=1234",n),e("priority = major AND foo > bar(1,2,3) Or priority = minor AND baz != 1234",n),e("priority = major && foo > bar(1,2,3) AND priority = minor and baz != 1234",n),e("priority = major and (foo > bar(1,2,3) OR priority = minor) and baz != 1234",n),e("priority = major or (foo > bar(1,2,3) or priority = minor) and baz != 1234",n),e("not priority = major or foo > bar() or priority = minor",n),e('not priority = major or foo > bar() AnD priority="minor"',n),e('not priority = major or not foo > bar() AnD priority="minor"',n),e('not (priority = major or not foo > bar()) AnD priority="minor"',n),e('! (priority = major or ! foo > bar()) AnD priority="minor"',n),e("! (priority changed from major or ! foo > bar()) AnD priority changed to minor",n),e('not not (not priority = major or     foo >bar()) and         priority="minor"',n),u=0;u<s.length;u++)f=s.charAt(u),c="test"+f+"dfjd",e("'"+c+"' = 'good'",n);for(e("order by crap",n),e("order by crap  DESC",n),e("order by crap  ASC",n),e("",n),e('affectedVersion = "New Version 1" order by affectedVersion         ASC,         affectedVersion       DESC, cf[1234]  DESC    ',n),e('(not (resolutiondate <= "2008-01-01") and (type in (Improvement)) or "Priority for beta phase" = 3) and\nassignee = currentUser() order by status',n),e('(not (resolutiondate <= "2008-01-01") and (type in (Improvement)) or "Priority for beta phase" = 3) or\nassignee = currentUser() order by status',n),e('(not (resolutiondate <= "2008-01-01") and (type in (Improvement)) or "Priority for beta phase" = 3) and not\nassignee = currentUser() order by status',n),e("issue.property[x]=y",n),e("issue.property[x.y].test.path = y",n),e("issue.property[x.y].test.path = y.a",n),e("issue.property = y",a),e("issue.property",a),e("issue.property[.x] = y",a),e("issue.property[x] = x",n),e("issue.property[issue.status] = resolved",n),e('ISSUE.property["issue.status"] = resolved',n),e("issue.property['issue.status'] = resolved",n),e("issue.property     ['issue.status'] = resolved",n),e("issue.property['1@4s'] = resolved",n),e("issue.property[1234] = resolved",n),e("issue.property[-1234] = resolved",n),e("issue.property.x = y",a),e("issue.ProPeRty['-@,@'] = resolved",n),e("comment.prop[author]= filip",a),e("comment.prop[author]..a= filip",a),e("version = 1.2.3",n),e("       ",a),e("foo",a),e("foo=",a),e("=",a),e("!=",a),e("foo bar and 78foo = bar",a),e("and and",a),e("a=b a=b",a),e("foo=bar and",a),e("foo=bar and and",a),e("foo=bar and 78foo",a),e("foo=bar and 78foo=",a),e("foo=bar and \n78foo",a),e("foo=bar and 78foo brenden and a=b",a),e("foo=bar and \n78foo brenden and a=b",a),e("foo=bar and not",a),e("foo=bar and not foo =",a),e("not",a),e("not not",a),e("a=b and not not=b",a),e("a=b not a=b",a),e("(",a),e("abc = ()",a),e("abc ~ ()",a),e("abc = )foo(",a),e("abc in (foo",a),e("abc in (foo(",a),e("abc IN ((foo)",a),e("abc in (foo))",a),e("abc in ((fee, fie, foe, fum), 787, (34, (45))",a),e("priority = 12345=== not p jfkff fjfjfj",a),e("priority = 12345 jfkff fjfjfj",a),e("priority=a jfkff=fjfjfj",a),e("priority=12345 jfkff=fjfjfj",a),e("a=b ,b",a),e("a=b,b",a),e("a inb",a),e("a isb",a),e("a is notb",a),e("a not inb",a),u=0;u<p.length;u++)e(p[u]+" = stuff",a),e("stuff = "+p[u],a);for(e("cf[1234 = x",a),e("cf1234] = x",a),e("cf[z123] = x",a),e("cf[-123] = x",a),e("cf[] = x",a),e("[54] = x",a),e("pri notin (x)",a),e("pri isnot empty",a),e("pri ^ empty",a),e("pri ! in (test)",a),e("pri is ! empty",a),e('priority = """',a),e('priority = "',a),e("priority = '''",a),e("priority = '",a),e("what = hrejw'ewjrhejkw",a),e('wh"at = hrejwewjrhejkw',a),e("'' = bad",a),e('"" = bad',a),e("a = ''()",a),e('b = ""()',a),e("test = case\\",a),e("test = case\\k",a),e("test = case\\u",a),e("test = case\\u278q",a),e("test = case\\u27",a),e("test = case\\u-998",a),e("test = case order by \\u-998",a),e("test = case\\uzzzz",a),e("test = case\\u278qzzzz",a),e("test = case\\u27zzzzz",a),e("tecase\\u-998zzzzz",a),e("case order by \\u-998zzzzz",a),e("cf = brenden",a),e("cf = broken",a),e("\0iuyiuyiu",a),e("aa = order by ",a),e("cont\nrol = ''",a),e("control = f\run()",a),e("a = b order by",a),e("a = b order bya",a),e("a = b order",a),e("a = b order BY abc desc, ",a),e("a = b order BY abc desc,qq,",a),e("a = b order BY abc qq asc,",a),e("a = b ANDaffectedVersion=hello",a),e("a = b ORaffectedVersion=hello",a),e("a = b ORNOTaffectedVersion=hello",a),u=0;u<s.length;u++)f=s.charAt(u),e("test"+f+"dfjd = 'bad'",a);e("f\n = \n \n abc *",a),e("f *= abc",a);var d=[{auto:!0,cfid:"cf[10008]",displayName:"Sprint - cf[10008]",operators:["=","!=","in","not in","is","is not"],orderable:!0,searchable:!0,types:["com.atlassian.greenhopper.service.sprint.Sprint"],value:"Sprint"},{auto:!0,cfid:"cf[10008]",displayName:"Potato (Sprint) - cf[10008]",operators:["=","!=","in","not in","is","is not"],orderable:!0,searchable:!0,types:["com.atlassian.greenhopper.service.sprint.Sprint"],value:"Sprint"},{cfid:"cf[10006]",displayName:"Epic Colour - cf[10006]",operators:["=","!=","in","not in","is","is not"],orderable:!0,searchable:!0,types:["java.lang.String"],value:"Epic Colour"},{cfid:"cf[10006]",displayName:"Orange Colour (Epic Colour) - cf[10006]",operators:["=","!=","in","not in","is","is not"],orderable:!0,searchable:!0,types:["java.lang.String"],value:"Epic Colour"},{auto:!0,displayName:"issuetype",operators:["=","!=","in","not in","is","is not"],orderable:!0,searchable:!0,types:["com.atlassian.jira.issue.issuetype.IssueType"],value:"issuetype"}],y=[{originalName:"sprint",newName:"Potato",newNamePlural:"Buggies"},{originalName:"epic",newName:"Orange",newNamePlural:"Oranges"}];module("Terminology Hint",{setup:function(){var e=this,r=t('<textarea id="jql-search"/>');this.sandbox=sinon.sandbox.create(),this.clock=this.sandbox.useFakeTimers(),this.server=this.sandbox.useFakeServer(),this.server.autoRespond=!0,this.server.respondWith(new RegExp("/jql/autocompletedata/suggestions\\?fieldName=issuetype&fieldValue=(.*?)&_=\\d*$"),function(e,r){var o=r?'{"results":[{"value":"Epic","displayName":"<b>Or</b>ange (Epic)"}]}':'{"results":[{"value":"Bug","displayName":"Bug"},{"value":"Epic","displayName":"Epic"},{"value":"Epic","displayName":"Orange (Epic)"},{"value":"Story","displayName":"Story"},{"value":"Sub-task","displayName":"Sub-task"},{"value":"Task","displayName":"Task"}]}';e.respond(200,{"Content-Type":"application/json"},o)}),this.isTerminologyActive=!0,this.sandbox.stub(i,"isTerminologyActiveForUser",function(){return e.isTerminologyActive}),this.sandbox.stub(i,"getTerminologyEntries").returns(y),this.$fixture=t("#qunit-fixture"),r.appendTo(this.$fixture)},teardown:function(){this.sandbox.restore()},initializeJQLAutocomplete:function(e){this.jqlAutoComplete=new o({fieldID:"jql-search",parser:new r(l),jqlFieldNames:d,jqlFunctionNames:[],suggestionsLimit:e}),this.jqlAutoComplete.buildResponseContainer()}}),test("does not display terminology hint when terminology is not active",function(){this.isTerminologyActive=!1,this.initializeJQLAutocomplete(),this.jqlAutoComplete.dispatcher("bug"),notOk(this.$fixture.find(".terminology-help-container").length)}),test("displays terminology hint when a single term has matching suggestions",function(){this.initializeJQLAutocomplete(2),this.jqlAutoComplete.dispatcher("bug");var e=this.$fixture.find(".terminology-help-container"),r=e.find("p.syntax-help span").text();ok(e.length),equal(r,"jira.terminology.jqlautocomplete.hint.single")}),test("displays terminology hint for epic and sprints combined when there are matching suggestions",function(){this.initializeJQLAutocomplete(),this.jqlAutoComplete.dispatcher("lol");var e=this.$fixture.find(".terminology-help-container"),r=e.find("p.syntax-help span").text();ok(e.length),equal(r,"jira.terminology.jqlautocomplete.hint.multiple")}),test("displays terminology hint for issuetype value suggestions",function(){this.initializeJQLAutocomplete(),this.jqlAutoComplete.field.val("issuetype = "),this.jqlAutoComplete.dispatcher("issuetype = "),this.clock.tick(50);var e=this.$fixture.find(".terminology-help-container"),r=e.find("p.syntax-help span").text();ok(e.length),equal(r,"jira.terminology.jqlautocomplete.hint.single")}),test("displays terminology hint while filtering issuetype value suggestions",function(){this.initializeJQLAutocomplete(),this.jqlAutoComplete.field.val("issuetype = Or"),this.jqlAutoComplete.dispatcher("issuetype = Or"),this.clock.tick(50);var e=this.$fixture.find(".terminology-help-container"),r=e.find("p.syntax-help span").text();ok(e.length),equal(r,"jira.terminology.jqlautocomplete.hint.single")})});