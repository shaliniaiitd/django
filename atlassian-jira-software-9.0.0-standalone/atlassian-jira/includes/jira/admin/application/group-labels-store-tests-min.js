AJS.test.require(["jira.webresources:application-role-labels"],function(){"use strict";require(["jira/admin/application/group-labels-store"],function(e){function s(e,s){return{name:e,labels:s}}module("GroupLabelsStore tests",{setup:function(){this.sandbox=sinon.sandbox.create(),this.server=sinon.fakeServer.create(),this.clock=sinon.useFakeTimers()},teardown:function(){this.sandbox.restore(),this.server.restore(),this.clock.restore()}}),test("consecutive requests terminate ongoing requests",function(s){e.fetchLabels(),this.clock.tick(200),e.fetchLabels(),s.ok(this.server.requests[0].aborted,"GET aborted")}),test("it will trigger listener",function(){var t=this.sandbox.stub(e,"fetchLabels"),r=this.sandbox.stub(),n=this.sandbox.stub(),i=e.syncLabels("group1","role1",r),o=e.syncLabels("group2","role2",n);e.triggerListener(i,[s("group1")]),e.triggerListener(o,[s("group1")]),e.triggerListener(i,[s("group2")]),sinon.assert.calledOnce(r),sinon.assert.notCalled(n),sinon.assert.calledTwice(t)}),test("callback not fired after removing handler",function(){var t=this.sandbox.stub(e,"fetchLabels"),r=this.sandbox.stub();e.syncLabels("group1","role1",r),e.triggerListeners([s("group1")]),e.removeHandler(r),e.triggerListeners([s("group1")]),sinon.assert.calledOnce(r,"callback1 not triggered second time"),sinon.assert.calledOnce(t,"callback1 not triggered second time")})})});